
/****************************************************/
 LIBRARY = "NCSU_Analog_Parts"
 CELL    = "msline"
/****************************************************/

let( ( libId cellId cdfId )
    unless( cellId = ddGetObj( LIBRARY CELL )
        error( "Could not get cell %s." CELL )
    )
    when( cdfId = cdfGetBaseCellCDF( cellId )
        cdfDeleteCDF( cdfId )
    )
    cdfId  = cdfCreateBaseCellCDF( cellId )

    ;;; Parameters
    cdfCreateParam( cdfId
        ?name           "l"
        ?prompt         "Length"
        ?units          "lengthMetric"
        ?defValue       ""
        ?type           "string"
        ?display        "artParameterInToolDisplay('l)"
        ?parseAsNumber  "yes"
        ?parseAsCEL     "yes"
    )
    cdfCreateParam( cdfId
        ?name           "w"
        ?prompt         "Width"
        ?units          "lengthMetric"
        ?defValue       ""
        ?type           "string"
        ?display        "artParameterInToolDisplay('w)"
        ?parseAsNumber  "yes"
        ?parseAsCEL     "yes"
    )
    cdfCreateParam( cdfId
        ?name           "h"
        ?prompt         "Substrate height"
        ?units          "lengthMetric"
        ?defValue       ""
        ?type           "string"
        ?display        "artParameterInToolDisplay('h)"
        ?parseAsNumber  "yes"
        ?parseAsCEL     "yes"
    )
    cdfCreateParam( cdfId
        ?name           "t"
        ?prompt         "Conductor thickness"
        ?units          "lengthMetric"
        ?defValue       ""
        ?type           "string"
        ?display        "artParameterInToolDisplay('t)"
        ?parseAsNumber  "yes"
        ?parseAsCEL     "yes"
    )
    cdfCreateParam( cdfId
        ?name           "eps"
        ?prompt         "Relative permittivity"
        ?defValue       ""
        ?type           "string"
        ?display        "artParameterInToolDisplay('eps)"
        ?parseAsNumber  "yes"
        ?parseAsCEL     "yes"
    )

    ;;; Simulator Information
    cdfId->simInfo = list( nil )
    cdfId->simInfo->spectre = '( nil
        propMapping       nil
        netlistProcedure  ansSpectreCompPrim
        instParameters    (l w h t eps)
        termOrder         (t1 b1 t2 b2)
        termMapping       (nil t1 "" b1 "(FUNCTION minus(root(\"t1\")))" t2 "" b2 "(FUNCTION minus(root(\"t2\")))")
        namePrefix        "MSL"
        componentName     msline
        noPortDelimiter   t
        current           port
    )
    cdfId->simInfo->spectreS = '( nil
        propMapping       nil
        netlistProcedure  ansSpectreSCompPrim
        instParameters    (l w h t eps)
        termOrder         (t1 b1 t2 b2)
        termMapping       (nil t1 "" b1 "(FUNCTION minus(root(\"t1\")))" t2 "" b2 "(FUNCTION minus(root(\"t2\")))")
        namePrefix        "MSL"
        componentName     msline
        noPortDelimiter   t
        current           port
    )

    ;;; Properties
    cdfId->formInitProc            = ""
    cdfId->doneProc                = ""
    cdfId->buttonFieldWidth        = 340
    cdfId->fieldHeight             = 35
    cdfId->fieldWidth              = 350
    cdfId->promptWidth             = 175
    cdfId->paramLabelSet           = "l w h"
    cdfSaveCDF( cdfId )
)
